ideas
    Save the mobs and their update time to preventie udating eithout cause

    Use the mob list time stamps to check when it was updated

    Instead of recreating the entire database add missing entries to it


create database file with mobName:id using monsters-complete.jsonhttps://raw.githubusercontent.com/osrsbox/osrsbox-db/master/docs/monsters-complete.json
create database file with itemName:id using https://www.osrsbox.com/osrsbox-db/items-summary.json
^ update these once a week on friday or whenever the script runs after that friday

maybe use id:mobName and id:itemName instead?

handle mob database failure to reach the url

structure -> create database with mob names,id's and last change date from monsters-complete
    use the osrsbox mobName:lastChangeDate file (eg. retrieved every friday) to compare the lastChangeDate in the database
    if the lastChangeDate differes, or the entry doesn't yet exist 
    update the database and download the new file into a separate folder
    this way the database file stays at a small file size
    ^ if the mob name is not yet in the database i guess you'd have to
        - download an entirely new monsters-complete.json
        - use the osrsbox.com search npc id website, write some kind of com wrapper thing to search the mob id
            Take into account that sometimes there are multiple results 
            even though only one is valid. Eg: Typhor 9295 and Typhor 9296 where you want 9296 as 9295 shows an error
        - npc id's are also saved on the wiki page info box even though they're not displayed. under 'Monster ID</th><td colspan="18">9295,9296</td></tr><tr'
    outputObj[mob_id].wiki_url := inputObj[mob_id].wiki_url
    outputObj[mob_id].category := inputObj[mob_id].category
    outputObj[mob_id].drops := inputObj[mob_id].drops
    ^^^^^
        NOTE: For some reason a lot of the timestamps in the monsters-wiki-page-titles.json are already not identical to monsters-complete
        so.. another idea would be to just retrieve an entire new monsters-complete and create a fresh database with that once a day or whatever interval. But do it in the background
            for example by running a separate script. this way you can just compare the timestamps from the individual npc files to the main database
            or with a SetTimer, like i think the stats update thing uses. as long as it doesnt hang the script

debug -> download the entire monsters-complete thing and see how large the file gets. possibly have to store drops separately or not at all
    ^ 15 MB. Definetly handle this differently

bug -> the mob database class opens two progress guis and closes two of them, if updating. the second time the progress gui gets closed there is an error message

feature -> remove duplicate mobs from the database

settings arent saving because the object inside of the settings class doesnt get modified by writing script_settings.key := value

todo -> start with the start gui
    + do i want to display all npcs or individually add npc's
        fun fact: now that we don't have duplicates just get the npc id by searching
    - go through gui start's methods from top to bottom making them functional
        + MobListBoxHandler(): add settings to the script and save the gui start selected mob
        + BtnLog()

feature -> download mob images in drop table class

todo -> write retrieve function automatically retrieve the drop table for every mob in the database and thereby also downloading the mob and drop images

structure -> save mob images as id's

structure -> consider combining the different image functions into a class?

planning -> item categories -> if a drop table needs to be divided into categories
    - go through each category and make a list of how many hits the drop table has in each category. for example 5 herbs 3 farming stuff 10 equipment
    - use that list to determine which items should go into a separate category to prevent having categories of 1 or 2 items while the drop table might have 10 equipment
        ^ either go with the largest category or the lowest amount while still meeting the main drop table max limit
    Interesting links:
        https://www.osrsbox.com/blog/2018/12/12/scraping-the-osrs-wiki-part1/#extract-all-categories
        https://oldschool.runescape.wiki/api.php?action=help&modules=query
        https://www.mediawiki.org/wiki/API:Revisions
        https://www.mediawiki.org/wiki/API:Categorymembers

    Working api links
        Query - categoryinfo
            https://oldschool.runescape.wiki/api.php?action=query&prop=categoryinfo&titles=Category:Armour
        Get all pages beloging to a category! :D : (add &format=json)
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&format=json&cmtitle=Category:Runes
			
			https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Runes
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Gems
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Herbs
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Logs
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Ores
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Potions
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:Fish

            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:
            https://oldschool.runescape.wiki/api.php?action=query&list=categorymembers&cmlimit=500&cmtitle=Category:

	_setCategoryObj() {
		this.categoriesObj := []
		this.categoriesObj["items"] := []
		this.categoriesObj["skills"] := []
		this.categoriesObj["weapons"] := []
		this.categoriesObj["armour"] := []
		
		this.categoriesObj["items"].push("Runes")
		this.categoriesObj["items"].push("Gems")
		this.categoriesObj["items"].push("Herbs")
		this.categoriesObj["items"].push("Logs")
		this.categoriesObj["items"].push("Ores")
		this.categoriesObj["items"].push("Potions")
		this.categoriesObj["items"].push("Fish")
		
		this.categoriesObj["skills"].push("Construction")
		this.categoriesObj["skills"].push("Farming")
		this.categoriesObj["skills"].push("Firemaking")
		this.categoriesObj["skills"].push("Fishing")
		this.categoriesObj["skills"].push("Hunter")
		this.categoriesObj["skills"].push("Mining")
		this.categoriesObj["skills"].push("Runecrafting")
		this.categoriesObj["skills"].push("Smithing")
		this.categoriesObj["skills"].push("Woodcutting")
		this.categoriesObj["skills"].push("Crafting_items")
		this.categoriesObj["skills"].push("Prayer_items")
		this.categoriesObj["skills"].push("Herblore_items")
		
		this.categoriesObj["weapons"].push("Ammunition_slot_items")
		this.categoriesObj["weapons"].push("Weapon_slot_items")
		
		this.categoriesObj["armour"].push("Head_slot_items")
		this.categoriesObj["armour"].push("Neck_slot_items")
		this.categoriesObj["armour"].push("Body_slot_items")
		this.categoriesObj["armour"].push("Legwear_slot_items")
		this.categoriesObj["armour"].push("Feet_slot_items")
		this.categoriesObj["armour"].push("Cape_slot_items")
		this.categoriesObj["armour"].push("Shield_slot_items")
		this.categoriesObj["armour"].push("Hand_slot_items")
		this.categoriesObj["armour"].push("Ring_slot_items")
		
		; this.listOfCategoryLists=
		; ( Ltrim A_Tab join`,
		; category_items
		; category_skills
		; category_weapons
		; category_armour
		; )
		
		; category_items=
		; ( Ltrim A_Tab join`,
		; Runes
		; Gems
		; Herbs
		; Logs
		; Ores
		; Seeds
		; Potions
		; Fish
		; )
		
		; category_skills=
		; ( Ltrim A_Tab join`,
		; Construction
		; Farming
		; Firemaking
		; Fishing
		; Hunter
		; Mining
		; Runecrafting
		; Smithing
		; Woodcutting
		; Crafting_items
		; Prayer_items
		; Herblore_items
		; )
		
		; category_weapons=
		; ( Ltrim A_Tab join`,
		; Ammunition_slot_items
		; Weapon_slot_items
		; )

		; category_armour=
		; ( Ltrim A_Tab join`,
		; Head_slot_items
		; Neck_slot_items
		; Body_slot_items
		; Legwear_slot_items
		; Feet_slot_items
		; Cape_slot_items
		; Shield_slot_items
		; Hand_slot_items
		; Ring_slot_items
		; )

 Saving gui log position
 
Progress on the log gui
 
GUI_LOG progress. drop tables are loaded

Expanded the drop category class

++ Position methods -> SavePos, CheckPos, ShowGui
    Context menu -> MiscMenu_Show

feature -> gui settings
    ^ also plug in to gui_log

feature -> gui about
    ^ also plug in to gui_log

feature -> gui stats
    ^ also plug in to gui_log
        Enable the SetTimer in .Update()
        Enable auto open stats if setting is set at the end of Get()

    ^ gui stats class currently directly references objects inside the drop log stats class eg: DROP_STATS.uniqueDrops.length()) fix this

bug -> this.SetIcon(ico.GetHandle()) isn't working for the gui's

structure -> stats is it necessary to have two separate objects for 'advanced' and 'basic' stats? just use one object retrieved with a GetStats[] thing in the stats class
structure -> considering merging drop log class and drop log stats
    ^ having now made the drop log stats class a sub class of drop log, also restructure the drop log stats class
    and then compare the two to see which one is neater. definetly worth noting is that using sub classes
    ends up in a lot of indents which doesnt improve code readability. though this could partly
    be resolved by saving them in a separate file and then using #Include. This, again, doesnt help readability

todo -> different method for ignoring duplicate mobs. use the wiki_name to check if the mob was already added
    this is because for example vorkath has two different versions with different drop tables
        "wiki_name": "Vorkath (Dragon Slayer II)" quest version
        "wiki_name": "Vorkath" post-quest version
    ^ add this explanation to the code

images
    runelite icons
        are accesible under this link
            https://raw.githubusercontent.com/runelite/static.runelite.net/gh-pages/cache/item/icon/0.png
        fix their alignment
            cut 4 pixels off to the right as they are 32x36
            or try something along those lines
    detailed wiki icons
        cant download iowerth camp teleport
    small wiki icons
        get from osrsbox?

note/bug/wontfix -> Abyssal Sire has a 2 rune bars drop in the RDT and a 5 rune bar normal drop. the osrsbox drop table only has
    one rune bar entry with '5' as quantity..

wiki api -> new wiki api replacing the old one
    structure -> put all wiki api calls and handling of the api output in this class,
        so the drop category class or atleast the 'update' method will have to go in here

    old
        todo -> rename ClassApiWiki to something like ClassWiki or ClassWikiScraper because it doesn't actually use the wiki api which is conflicting. it's my wiki 'api'
        feature -> (maybe a rewrite depending on how usefull this can be) Idea use the actual wiki api to improve my wiki api class
        feature -> Add the droptable category class wiki api calls inside the wiki class
        feature -> add more documentation. class/method and their parameter(s) descriptions 
            eg. its not clear what the input parameter(s) are for GetMobImage
        bug ->  getmob image can't retrieve image for spinolyp
            the wiki page infobox for this mob has 'suspicious water' preselected instead of the actual spinolyp which is probably messing the script up

wontfix -> structure -> integrate gui position code into the class. using the built in ini stuff to save position information
	in the same spot as the class files. or maybe in temporary folder or something
		save pos, restore pos, check correct pos

wontfix -> structure -> wiki class -> Add the droptable category class wiki api calls inside the wiki class
	^ reason: increases code complexity for minor cleanliness improvement

structure -> wiki class -> more documentation

bug -> added a Rune dragon kill with a lot of drops. this glitched out the unique stats, showing a bunch of drops with just 'x'
	1 x Grimy torstol, 1 x Grimy snapdragon, 1 x Grimy ranarr weed, 1 x Grimy ranarr weed, 1 x Grimy avantoe, 1 x Grimy torstol, 1 x Draconic visage, 1 x Draconic visage, 1 x Draconic visage, 1 x Draconic visage, 1 x Draconic visage
	Saved log file to myDebugDropLogfileWithRuneDragonBug.json in /dev/

bug -> first drop of night beast doesn't have a shortest and max dry steak value, reproduce: 
	1 x Belladonna seed, 1 x Poison ivy seed, 1 x Avantoe seed, 1 x Poison ivy seed, 1 x Poison ivy seed, 1 x Belladonna seed, 1 x Lantadyme seed, 1 x Cadantine seed
	^ match found variables werent cleared before looping another unique item

feature -> ON_WM_LBUTTONDOWN -> quantity select gui

feature/idea/wontfix -> instead of showing the entire mob list in the start gui show  a 'favourites' list mobs can be added to and removed from
	listview using the mob images
	^ reason: previous mob is already saved and the search function works fine. this could be added but its not necessary

feature idea -> Update ClassMobDatabase._Update() in the background so it doesn't take 20 seconds
	^ it's only once a week though

feature -> speed up item db load time? would be able to do this with an item name:id list of the items
	that are actually in drop tables and only storing necessary item prices
		wiki api = instant
		item db = 0.200
		mob db = 0.04

structure -> Rename items database
	probably to ITEM_PRICE and prices database on disk

gui log images
	bug -> gui log runelite images are all broken
	bug -> gui log detailed images some are broken atleast for 'night beast'
	bug -> gui log settings change image type, then gui is reshown but images arent changed until restarting script

bug -> gui log detailed images for night beast has several black images
	^ several errors retrieving images
	^ fixed itself by restarting the script a few times. seems the wiki website might have been limiting/throttling downloads or something?

bug -> gui_log -> menu open drop log file, windows doesnt open the .json for some reason

feature -> drop categories -> take max drop table variable into account
	if the drops list is above X, start adding items into categories until it is no longer above X
		^ first get all the item category sizes to determine which to start with
		start with separating the largest category OR the one that gets the nearest below X
		this prevents item categories with very few items

bug -> fixed items without a category being removed from the drop table by the drop table category class, adding them into main now

bug -> whenever log gui is shown also refetch the drop table so changes are taken into accoutn. for example after changing settings
	specifically putting the drop table in specific categories setting

bug -> night beast doesn't have rare drop table drops added
	- possibly start fetching drop tables using my own wiki thing again, but without the drop table names
	- check other mobs with rare drop tables
	^ uhh.. it seems like A LOT of mobs have changed their id and possibly osrsbox is a bit outdated/bugged right now
		abbysal demon has id 4149 on https://www.osrsbox.com/tools/item-search/
		where it used to be 4151. also, in mobs database.json it has 415.json for some reason
	^ manually or semi-manually fetch all the drops on https://oldschool.runescape.wiki/w/Rare_drop_table
	and add these into a separate category that is visible for every mob right after the main drop table
	update the rare drop table with the same interval as the mob database

feature -> drop categories -> separate the rare drop table and the others like gem drop table from the main drop table
	^ seems atleast by checking vorkath the rare drop table isn't included. So always include the RDT into the gui,
		either as a tab or an image that opens a separate gui

structure -> Rename mob database to something more generic as it can do mobs but also items